@page
@using DevExpressFormWithDataGrid.Models
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

@(Html.DevExtreme().DataGrid<Recipe>()
    .ID("recipesGrid")
    .ShowBorders(true)
    .OnEditingStart("recipeOnEditingStart")
    .DataSource(ds => ds
        .Mvc()
        .Controller("Recipes")
        .LoadAction("Recipes")
        .UpdateAction("Put")
        .Key("Id")
    )
    .Columns(c =>
    {
        c.AddFor(m => m.Id);
        c.AddFor(m => m.Name);
        c.AddFor(m => m.RecipeIngredients)
            .Visible(false)
            .EditCellTemplate(@<text>
                                  @(Html.DevExtreme().DataGrid<RecipeIngredient>()
                                      .ID("recipeIngredientsGrid")
                                      .OnRowInserted("updateRecipeIngredients")
                                      .OnRowUpdated("updateRecipeIngredients")
                                      .OnRowRemoved("updateRecipeIngredients")
                                      .ShowBorders(true)
                                      .Columns(columns =>
                                      {
                                          columns.AddFor(m => m.IngredientId)
                                              .Caption("Ingredient")
                                              .Lookup(lookup => lookup
                                                  .DataSource(d => d
                                                      .Mvc().Controller("Ingredients")
                                                      .LoadAction("Ingredients")
                                                      .Key("Id"))
                                                  .ValueExpr("Id")
                                                  .DisplayExpr("Name")
                                              );
                                      })
                                      .DataSource(ds => ds
                                          .Array().Data(new JS("data.RecipeIngredients"))
                                      )
                                      .Editing(e => e
                                          .Mode(GridEditMode.Cell)
                                          .AllowAdding(true)
                                          .AllowDeleting(true)
                                      )
                                      )
                               </text>);
        c.AddFor(m => m.Description)
            .Visible(false);
    })
    .MasterDetail(md => md
        .Enabled(true)
        .Template(@<text>
                      <div class="dx-form-group-with-caption">
                          <span class="dx-form-group-caption">Ingredients:</span>
                          <div class="dx-form-group-content">
                              @(Html.DevExtreme().DataGrid<RecipeIngredient>()
                                  .ShowBorders(true)
                                  .Columns(columns =>
                                  {
                                      columns.AddFor(m => m.IngredientId)
                                          .Caption("Ingredient")
                                          .Lookup(lookup => lookup
                                              .DataSource(d => d
                                                  .Mvc().Controller("Ingredients")
                                                  .LoadAction("Ingredients")
                                                  .Key("Id"))
                                              .ValueExpr("Id")
                                              .DisplayExpr("Name")
                                          );
                                  })
                                  .DataSource(ds => ds
                                      .Array().Data(new JS("data.RecipeIngredients"))
                                  )
                                  )
                          </div>
                      </div>
                   </text>))
    .Editing(e => e
        .AllowUpdating(true)
        .Mode(GridEditMode.Popup)
        .Popup(p => p
            .Title("Recipe")
            .ShowTitle(true)
            .Width(700)
            .Position(pos => pos
                .My(HorizontalAlignment.Center, VerticalAlignment.Center)
                .At(HorizontalAlignment.Center, VerticalAlignment.Center)
                .Of(new JS("window"))
            )
        )
        .Form(f => f
            .Items(items =>
            {
                items.AddSimpleFor(m => m.Id);
                items.AddSimpleFor(m => m.Name);
                items.AddSimpleFor(m => m.RecipeIngredients)
                    .ColSpan(2);
                items.AddSimpleFor(m => m.Description)
                    .ColSpan(2)
                    .Editor(editor => editor.TextArea().Height(200));
            }
            ))
    )
    )

<script>

    var recipesGrid;
    var rowIndex;
    var recipeId;
    
    function recipeOnEditingStart(e) {
        recipesGrid = $("#recipesGrid").dxDataGrid("instance");
        rowIndex = recipesGrid.getRowIndexByKey(e.key);
        recipeId = e.data.Id;
    }
    
    function updateRecipeIngredients() {
        var ds = $("#recipeIngredientsGrid").dxDataGrid("getDataSource");
    
        var temp = [];
        ds.items().forEach(function(item) {
            temp.push({ "RecipeId": recipeId, "IngredientId": item.IngredientId});
        });
    
        recipesGrid.cellValue(rowIndex, "RecipeIngredients", temp);     
    }

</script>